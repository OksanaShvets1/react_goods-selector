{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleSelectGood","good","setState","handleClearSelection","this","className","type","onClick","map","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAkB,CAChBC,aAAc,OAFlB,EAKEC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAAEH,aAAcE,KANlC,EASEE,qBAAuB,WACrB,EAAKD,SAAS,CAAEH,aAAc,MAVlC,4CAaE,WAAU,IAAD,OACCA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACE,qBAAIA,UAAU,QAAd,UACGN,EAAY,UAAMA,EAAN,gBAAmC,oBAC/CA,GACC,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,qBACd,aAAW,uBAKjB,uBAAOE,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAACP,GAAD,OACT,qBAEE,UAAQ,OACRI,UAAWI,IAAW,CACpB,+BAAgCV,IAAiBE,IAJrD,UAOIF,GAAgBE,IAASF,EAYzB,6BACE,wBACE,UAAQ,eACRO,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKJ,qBAJhB,iBAZF,6BACE,wBACE,UAAQ,YACRG,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKP,iBAAiBC,IAJvC,iBAqBJ,oBAAI,UAAQ,YAAYI,UAAU,eAAlC,SACGJ,MA9BEA,iBAnCrB,GAAyBS,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b69ff86b.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface AppState {\n  selectedGood: string;\n}\n\nexport class App extends Component<{}, AppState> {\n  state: AppState = {\n    selectedGood: 'Jam',\n  };\n\n  handleSelectGood = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  handleClearSelection = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title\">\n          {selectedGood ? `${selectedGood} is selected` : 'No goods selected'}\n          {selectedGood && (\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.handleClearSelection}\n              aria-label=\"Clear selection\"\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={classNames({\n                  'has-background-success-light': selectedGood === good,\n                })}\n              >\n                {!selectedGood || good !== selectedGood ? (\n                  <td>\n                    <button\n                      data-cy=\"AddButton\"\n                      type=\"button\"\n                      className=\"button\"\n                      onClick={() => this.handleSelectGood(good)}\n                    >\n                      +\n                    </button>\n                  </td>\n                ) : (\n                  <td>\n                    <button\n                      data-cy=\"RemoveButton\"\n                      type=\"button\"\n                      className=\"button is-info\"\n                      onClick={this.handleClearSelection}\n                    >\n                      -\n                    </button>\n                  </td>\n                )}\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}